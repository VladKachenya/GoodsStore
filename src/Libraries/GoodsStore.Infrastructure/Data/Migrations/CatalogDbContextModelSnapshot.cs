// <auto-generated />
using GoodsStore.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GoodsStore.Infrastructure.Data.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    partial class CatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GoodsStore.Core.Entities.Base.CatalogItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("ItemBrandId");

                    b.Property<int>("ItemTypeId");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("ItemBrandId");

                    b.HasIndex("ItemTypeId");

                    b.ToTable("CatalogItems");

                    b.HasDiscriminator<string>("Discriminator").HasValue("CatalogItem");
                });

            modelBuilder.Entity("GoodsStore.Core.Entities.Base.ItemBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("GoodsStore.Core.Entities.Base.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName");

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("GoodsStore.Core.Entities.Refrigerator", b =>
                {
                    b.HasBaseType("GoodsStore.Core.Entities.Base.CatalogItem");

                    b.Property<double>("FreezerCameraVolume");

                    b.Property<double>("Height");

                    b.Property<double>("RefrigeratorCameraVolume");

                    b.Property<double>("Width");

                    b.HasDiscriminator().HasValue("Refrigerator");
                });

            modelBuilder.Entity("GoodsStore.Core.Entities.Base.CatalogItem", b =>
                {
                    b.HasOne("GoodsStore.Core.Entities.Base.ItemBrand", "ItemBrand")
                        .WithMany()
                        .HasForeignKey("ItemBrandId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GoodsStore.Core.Entities.Base.ItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
